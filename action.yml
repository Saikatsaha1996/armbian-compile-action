name: 'Armbian/build'
description: 'Armbian Linux build framework'
inputs:
  board:
    required: true
  flavor:
    required: true
  release-id:
    required: false
  github-token:
    required: false
runs:
  using: "composite"
  steps:
    - name: Get more space
      uses: easimon/maximize-build-space@master
      with:
        root-reserve-mb: 20480
        temp-reserve-mb: 4096
        swap-size-mb: 1024
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: armbian/build
        ref: main
        path: build
    - name: Set env
      shell: bash
      run: |
        if [ ${{ inputs.flavor }} == "debian" ]
        then
          echo "release=sid" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=gnome" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=no" >> $GITHUB_ENV
        elif [ ${{ inputs.flavor }} == "ubuntu" ]
        then
          echo "release=jammy" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=yes" >> $GITHUB_ENV
          echo "desktop-environment=gnome" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
          if [ "${{ inputs.branch }}" == "legacy" ]; then
            if [[ "${{ inputs.board }}" == "rock-3a" || "${{ inputs.board }}" == "hinlink-h66k" || "${{ inputs.board }}" == "hinlink-h68k" ]]; then
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop rockchip-multimedia\"" >> $GITHUB_ENV
            elif [[ "${{ inputs.board }}" == "rock-5b" || "${{ inputs.board }}" == "hinlink-h88k" || "${{ inputs.board }}" == "orangepi5" || "${{ inputs.board }}" == "rock-5a" ]]; then
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop rockchip-multimedia panfork-mesa\"" >> $GITHUB_ENV
            else
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop\"" >> $GITHUB_ENV
            fi
          else
            echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop\"" >> $GITHUB_ENV
          fi
        elif [ ${{ inputs.flavor }} == "cli" ]
        then
          echo "release=jammy" >> $GITHUB_ENV
          echo "build-minimal=no" >> $GITHUB_ENV
          echo "build-desktop=no" >> $GITHUB_ENV
          echo "desktop-environment=gnome" >> $GITHUB_ENV
          echo "desktop-environment-config-name=config_base" >> $GITHUB_ENV
          echo "expert=yes" >> $GITHUB_ENV
          if [ "${{ inputs.branch }}" == "legacy" ]; then
            if [[ "${{ inputs.board }}" == "rock-3a" || "${{ inputs.board }}" == "hinlink-h66k" || "${{ inputs.board }}" == "hinlink-h68k" ]]; then
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop rockchip-multimedia\"" >> $GITHUB_ENV
            elif [[ "${{ inputs.board }}" == "rock-5b" || "${{ inputs.board }}" == "hinlink-h88k" || "${{ inputs.board }}" == "orangepi5" || "${{ inputs.board }}" == "rock-5a" ]]; then
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop rockchip-multimedia panfork-mesa\"" >> $GITHUB_ENV
            else
              echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop\"" >> $GITHUB_ENV
            fi
          else
            echo "desktop_appgroups_selected=\"3dsupport browsers chat desktop_tools editors email internet multimedia office programming remote_desktop\"" >> $GITHUB_ENV
          fi
        fi
    - name: Build
      shell: bash
      run: |
        cd ./build
        touch .ignore_changes
        mkdir -p arch/arm64/boot/dts/rockchip/
        sed -i "s|ext4|fat|g" config/boards/rock-5b.conf
        mkdir -p patch/kernel/archive/rk35xx-5.10
        if [ ${{ inputs.board }} == "hinlink-h68k" ]; then
            wget https://github.com/amazingfate/armbian-h68k-images/raw/master/backport-v6.1.39.patch -O patch/kernel/archive/rk35xx-5.10/backport-v6.1.39.patch
            wget https://github.com/amazingfate/armbian-h68k-images/raw/master/linux-rk35xx-legacy.config -O config/kernel/linux-rk35xx-legacy.config
        fi
        wget https://github.com/amazingfate/armbian-h68k-images/raw/master/hinlink-h66k.conf -O config/boards/hinlink-h66k.conf
        wget https://github.com/amazingfate/armbian-h68k-images/raw/master/hinlink-h68k.conf -O config/boards/hinlink-h68k.conf
        mkdir -p config/desktop/jammy/appgroups/rockchip-multimedia/sources/apt/
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/liujianfeng1994.gpg -O config/desktop/jammy/appgroups/rockchip-multimedia/sources/apt/rockchip-multimedia.gpg
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/rockchip-multimedia.source -O config/desktop/jammy/appgroups/rockchip-multimedia/sources/apt/rockchip-multimedia.source
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/rockchip-multimedia.packages -O config/desktop/jammy/appgroups/rockchip-multimedia/packages
        mkdir -p config/desktop/jammy/appgroups/panfork-mesa/sources/apt/
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/liujianfeng1994.gpg -O config/desktop/jammy/appgroups/panfork-mesa/sources/apt/panfork-mesa.gpg
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/panfork-mesa.source -O config/desktop/jammy/appgroups/panfork-mesa/sources/apt/panfork-mesa.source
        wget https://github.com/amazingfate/armbian-compile-action/raw/main/panfork-mesa.packages -O config/desktop/jammy/appgroups/panfork-mesa/packages
        git clone --depth 1 https://github.com/Saikatsaha1996/armbian-xiaomi-elish.git ../armbian-xiaomi-elish
        cp ../armbian-xiaomi-elish/linux-arm64-sm8350.config config/kernel/
        cp ../armbian-xiaomi-elish/realme-porsche.conf config/boards/
        cp ../armbian-xiaomi-elish/qcom-abl.conf config/sources/families/
        cp -r ../armbian-xiaomi-elish/bsp_realme-porsche packages/bsp/realme-porsche
        git status
        docker pull ghcr.io/armbian/docker-armbian-build:armbian-ubuntu-jammy-latest
        if [ ${{ inputs.flavor }} == "cli" ];then
            ./compile.sh \
            BOARD=${{ inputs.board }} \
            BRANCH=${{ inputs.branch }} \
            RELEASE=${{ env.release }} \
            BUILD_MINIMAL=${{ env.build-minimal }} \
            BUILD_DESKTOP=${{ env.build-desktop }} \
            KERNEL_CONFIGURE=no \
            EXPERT=${{ env.expert }} \
            BOARD_FIRMWARE_INSTALL="-full" \
            SHARE_LOG=yes \
            DEBUG=yes \
            COMPRESS_OUTPUTIMAGE=sha,gpg,xz
        elif [ ${{ inputs.board }} == "realme-porsche" ];then
            ./compile.sh \
            BOARD=${{ inputs.board }} \
            BRANCH=${{ inputs.branch }} \
            RELEASE=${{ env.release }} \
            BUILD_MINIMAL=${{ env.build-minimal }} \
            BUILD_DESKTOP=${{ env.build-desktop }} \
            KERNEL_CONFIGURE=no \
            DESKTOP_ENVIRONMENT=${{ env.desktop-environment }} \
            DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ env.desktop-environment-config-name }} \
            DESKTOP_APPGROUPS_SELECTED=${{ env.desktop_appgroups_selected }} \
            EXPERT=${{ env.expert }} \
            BOARD_FIRMWARE_INSTALL="-full" \
            SHARE_LOG=yes \
            DEBUG=yes \
            KERNEL_GIT=shallow \
            COMPRESS_OUTPUTIMAGE=sha,gpg
            cp ../armbian-xiaomi-elish/create-seperated-image.sh output/images
            cp ../armbian-xiaomi-elish/mkbootimg.py output/images
            sudo du -sh cache && sudo rm -rf cache && df -h
            cd output/images && ./create-seperated-image.sh Armbian*.img
        else
            ./compile.sh \
            BOARD=${{ inputs.board }} \
            BRANCH=${{ inputs.branch }} \
            RELEASE=${{ env.release }} \
            BUILD_MINIMAL=${{ env.build-minimal }} \
            BUILD_DESKTOP=${{ env.build-desktop }} \
            KERNEL_CONFIGURE=no \
            DESKTOP_ENVIRONMENT=${{ env.desktop-environment }} \
            DESKTOP_ENVIRONMENT_CONFIG_NAME=${{ env.desktop-environment-config-name }} \
            DESKTOP_APPGROUPS_SELECTED=${{ env.desktop_appgroups_selected }} \
            EXPERT=${{ env.expert }} \
            BOARD_FIRMWARE_INSTALL="-full" \
            SHARE_LOG=yes \
            DEBUG=yes \
            COMPRESS_OUTPUTIMAGE=sha,gpg,xz
        fi
    - name: Upload
      if: inputs.release-id != '' && inputs.github-token != ''
      uses: xresloader/upload-to-github-release@v1
      env:
          GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
        file: "./build/output/images/*.img.xz;./build/output/images/*.img.xz.sha;./build/output/debs/linux-*.deb"
        draft: false
        overwrite: true
    - name: Rollback release
      if: failure() && inputs.release-id != '' && inputs.github-token != ''
      uses: author/action-rollback@stable
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      with:
        release_id: ${{ inputs.release-id }}
